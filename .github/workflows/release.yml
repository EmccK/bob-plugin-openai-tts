name: Build and Release Bob Plugin

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write
  actions: read

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Get version
      id: get_version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          echo "TAG_NAME=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: Update version in info.json
      run: |
        VERSION="${{ steps.get_version.outputs.VERSION }}"
        VERSION_NUMBER="${VERSION#v}"
        sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION_NUMBER\"/" info.json
        
    - name: Create plugin package
      run: |
        # 创建临时目录
        mkdir -p temp_plugin
        
        # 复制必要文件到临时目录
        cp info.json temp_plugin/
        cp main.js temp_plugin/
        
        # 创建zip文件
        cd temp_plugin
        zip -r ../bob-plugin-openai-tts.zip .
        cd ..
        
        # 重命名为.bobplugin扩展名
        mv bob-plugin-openai-tts.zip bob-plugin-openai-tts.bobplugin
        
    - name: Generate SHA256
      id: sha256
      run: |
        SHA256=$(sha256sum bob-plugin-openai-tts.bobplugin | cut -d' ' -f1)
        echo "SHA256=$SHA256" >> $GITHUB_OUTPUT
        echo "Plugin SHA256: $SHA256"
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.TAG_NAME }}
        name: OpenAI TTS Plugin ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## OpenAI TTS Plugin ${{ steps.get_version.outputs.VERSION }}

          ### 功能特性
          - 支持 OpenAI TTS API
          - 支持多种语音模型 (tts-1, tts-1-hd, gpt-4o-mini-tts)
          - 支持多种预设声音和自定义声音
          - 支持自定义模型
          - 支持语音提示词 (prompt)
          - 支持自定义 API Base URL

          ### 安装方法
          1. 下载 `bob-plugin-openai-tts.bobplugin` 文件
          2. 双击文件安装到 Bob
          3. 在 Bob 设置中配置 OpenAI API Key

          ### 文件信息
          - **文件名**: bob-plugin-openai-tts.bobplugin
          - **SHA256**: ${{ steps.sha256.outputs.SHA256 }}
          - **最低 Bob 版本**: 1.8.0

          ### 更新日志
          请查看 commit 历史了解详细更改。
        files: |
          bob-plugin-openai-tts.bobplugin
        draft: false
        prerelease: false

    - name: Update appcast.json
      run: |
        # 获取当前时间戳 (毫秒)
        TIMESTAMP=$(date +%s)000

        # 获取版本号 (去掉v前缀)
        VERSION="${{ steps.get_version.outputs.VERSION }}"
        VERSION_NUMBER="${VERSION#v}"

        # 构建下载URL
        DOWNLOAD_URL="https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.TAG_NAME }}/bob-plugin-openai-tts.bobplugin"

        # 获取SHA256
        SHA256="${{ steps.sha256.outputs.SHA256 }}"

        # 创建新的版本条目JSON
        NEW_VERSION_JSON=$(jq -n \
          --arg version "$VERSION_NUMBER" \
          --arg desc "版本 $VERSION_NUMBER 发布" \
          --arg sha256 "$SHA256" \
          --arg url "$DOWNLOAD_URL" \
          --arg minBobVersion "1.8.0" \
          --argjson timestamp "$TIMESTAMP" \
          '{
            version: $version,
            desc: $desc,
            sha256: $sha256,
            url: $url,
            minBobVersion: $minBobVersion,
            timestamp: $timestamp
          }')

        # 更新appcast.json
        if [ -f appcast.json ]; then
          # 如果文件存在，添加新版本到开头，并移除重复版本
          jq --argjson newVersion "$NEW_VERSION_JSON" \
             --arg currentVersion "$VERSION_NUMBER" \
             '.versions = [$newVersion] + (.versions | map(select(.version != $currentVersion)))' \
             appcast.json > appcast_temp.json && mv appcast_temp.json appcast.json
        else
          # 如果文件不存在，创建新文件
          jq -n \
             --argjson newVersion "$NEW_VERSION_JSON" \
             '{
               identifier: "com.emcck.bob.tts",
               versions: [$newVersion]
             }' > appcast.json
        fi

        echo "Updated appcast.json with version $VERSION_NUMBER"

    - name: Commit and push appcast.json
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "Auto-update appcast.json for ${{ steps.get_version.outputs.VERSION }}"
        file_pattern: appcast.json
        commit_user_name: GitHub Action
        commit_user_email: action@github.com
        commit_author: GitHub Action <action@github.com>
        skip_dirty_check: false

    - name: Output release info
      run: |
        echo "✅ Release created successfully!"
        echo "📦 Plugin file: bob-plugin-openai-tts.bobplugin"
        echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ steps.get_version.outputs.TAG_NAME }}"
        echo "🔐 SHA256: ${{ steps.sha256.outputs.SHA256 }}"
